/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mp3inventory;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 * Main entry point and gui
 * @author Darian
 */
public class Mp3Inventory extends javax.swing.JFrame {

    private Mp3TableModel tableModel;
    
    /**
     * Creates new form Mp3Inventory
     */
    public Mp3Inventory() {
        tableModel = new Mp3TableModel();
        initComponents();
        //Handle mouse clicks on header for sorting
        songListTable.getTableHeader().addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int col = songListTable.columnAtPoint(e.getPoint());//Get column from mouse position
                col++;//Add 1 bc sorting columns are 1 more for inverse sorting (no -0)
                if(tableModel.getSortingMethod() == col)
                    col *= -1;//Invert for inverse sorting if we're sorting by that column
                tableModel.sortBy(col);//Sort by this column
                
                songListTable.invalidate();//Stuff for repainting
                songListTable.validate();
                songListTable.repaint();//Repaint table so new entry shows
            }
            
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        tabbedPane = new javax.swing.JTabbedPane();
        songListScrollPane = new javax.swing.JScrollPane();
        songListTable = new javax.swing.JTable();
        addSongPanel = new javax.swing.JPanel();
        addSongInputsPanel = new javax.swing.JPanel();
        addSongTitleLabel = new javax.swing.JLabel();
        addSongTitleField = new javax.swing.JTextField();
        addSongArtistLabel = new javax.swing.JLabel();
        addSongArtistField = new javax.swing.JTextField();
        addSongAlbumLabel = new javax.swing.JLabel();
        addSongAlbumField = new javax.swing.JTextField();
        addSongLengthLabel = new javax.swing.JLabel();
        addSongLengthField = new javax.swing.JTextField();
        addSongYearLabel = new javax.swing.JLabel();
        addSongYearField = new javax.swing.JTextField();
        addSongButtonsPanel = new javax.swing.JPanel();
        addSongAddButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mp3 Inventory");

        songListTable.setModel(tableModel);
        songListScrollPane.setViewportView(songListTable);

        tabbedPane.addTab("Songs", songListScrollPane);

        addSongPanel.setLayout(new java.awt.BorderLayout());

        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 100};
        addSongInputsPanel.setLayout(jPanel1Layout);

        addSongTitleLabel.setText("Title: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        addSongInputsPanel.add(addSongTitleLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        addSongInputsPanel.add(addSongTitleField, gridBagConstraints);

        addSongArtistLabel.setText("Artist:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        addSongInputsPanel.add(addSongArtistLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        addSongInputsPanel.add(addSongArtistField, gridBagConstraints);

        addSongAlbumLabel.setText("Album:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        addSongInputsPanel.add(addSongAlbumLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        addSongInputsPanel.add(addSongAlbumField, gridBagConstraints);

        addSongLengthLabel.setText("Length:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        addSongInputsPanel.add(addSongLengthLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        addSongInputsPanel.add(addSongLengthField, gridBagConstraints);

        addSongYearLabel.setText("Year:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        addSongInputsPanel.add(addSongYearLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        addSongInputsPanel.add(addSongYearField, gridBagConstraints);

        addSongPanel.add(addSongInputsPanel, java.awt.BorderLayout.CENTER);

        addSongButtonsPanel.setLayout(new java.awt.GridBagLayout());

        addSongAddButton.setText("Add");
        addSongAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSongAddButtonActionPerformed(evt);
            }
        });
        addSongButtonsPanel.add(addSongAddButton, new java.awt.GridBagConstraints());

        addSongPanel.add(addSongButtonsPanel, java.awt.BorderLayout.PAGE_END);

        tabbedPane.addTab("Add Song", addSongPanel);

        getContentPane().add(tabbedPane, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addSongAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSongAddButtonActionPerformed
        String title, artist, album;//Vars to store mp3 info
        int length, year;
        //Get title artist and album from fields
        title = addSongTitleField.getText();
        artist = addSongArtistField.getText();
        album = addSongAlbumField.getText();
        //Try to parse the length or default to -1
        try{
            length = Integer.parseInt(addSongLengthField.getText());
        }catch(NumberFormatException e){
            //Length field isn't a number, -1
            length = -1;
        }
        //Try to parse the year field or default to -1
        try{
            year = Integer.parseInt(addSongYearField.getText());
        }catch(NumberFormatException e){
            //Year field isn't a number, -1
            year = -1;
        }
        //Create the mp3
        Mp3 mp3 = new Mp3(title, artist, album, length, year);
        //Add to the table model
        tableModel.addSong(mp3);
        
        songListTable.invalidate();//Stuff for repainting
        songListTable.validate();
        songListTable.repaint();//Repaint table so new entry shows
        
        //Clear inputs
        addSongTitleField.setText("");
        addSongArtistField.setText("");
        addSongAlbumField.setText("");
        addSongLengthField.setText("");
        addSongYearField.setText("");
    }//GEN-LAST:event_addSongAddButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mp3Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mp3Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mp3Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mp3Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mp3Inventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addSongAddButton;
    private javax.swing.JTextField addSongAlbumField;
    private javax.swing.JLabel addSongAlbumLabel;
    private javax.swing.JTextField addSongArtistField;
    private javax.swing.JLabel addSongArtistLabel;
    private javax.swing.JPanel addSongButtonsPanel;
    private javax.swing.JPanel addSongInputsPanel;
    private javax.swing.JTextField addSongLengthField;
    private javax.swing.JLabel addSongLengthLabel;
    private javax.swing.JPanel addSongPanel;
    private javax.swing.JTextField addSongTitleField;
    private javax.swing.JLabel addSongTitleLabel;
    private javax.swing.JTextField addSongYearField;
    private javax.swing.JLabel addSongYearLabel;
    private javax.swing.JScrollPane songListScrollPane;
    private javax.swing.JTable songListTable;
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables
}
