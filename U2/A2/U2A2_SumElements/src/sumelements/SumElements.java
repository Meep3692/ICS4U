/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sumelements;

import java.util.ArrayList;

/**
 *
 * @author Awoo
 */
public class SumElements extends javax.swing.JFrame {

    ArrayList<Integer> numbers;
    
    /**
     * Creates new form SumElements
     */
    public SumElements() {
        initComponents();
        numbers = new ArrayList<>();
    }
    /**
     * Show the numbers on the output
     */
    private void showList(){
        String output = "";//String to store output in
        output = numbers.stream().map((number) -> number + "\n").reduce(output, String::concat);//Add numbers to output
        outputListTextArea.setText(output);//Show on screen
    }
    
    private void sumSome(boolean even){
        int sum = 0;
        String output = "";
        for(int number : numbers){//Iterate numbers
            if((number % 2 == 0) == even){//Test if evenness is what we want
                sum += number;//Add to sum
                output += number + "\n";
            }//Not using functional operator because that is long and weird
        }
        outputListTextArea.setText(output);
        outputField.setText("Sum: " + sum);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        controlsPanel = new javax.swing.JPanel();
        inputField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        listButton = new javax.swing.JButton();
        sumAllButton = new javax.swing.JButton();
        sumOddButton = new javax.swing.JButton();
        sumEvenButton = new javax.swing.JButton();
        inputLabel = new javax.swing.JLabel();
        outputScrollPane = new javax.swing.JScrollPane();
        outputListTextArea = new javax.swing.JTextArea();
        outputField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sum Elements");

        controlsPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        controlsPanel.add(inputField, gridBagConstraints);

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        controlsPanel.add(addButton, gridBagConstraints);

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        controlsPanel.add(removeButton, gridBagConstraints);

        listButton.setText("List");
        listButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        controlsPanel.add(listButton, gridBagConstraints);

        sumAllButton.setText("Sum All");
        sumAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumAllButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        controlsPanel.add(sumAllButton, gridBagConstraints);

        sumOddButton.setText("Sum Odd");
        sumOddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumOddButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        controlsPanel.add(sumOddButton, gridBagConstraints);

        sumEvenButton.setText("Sum Even");
        sumEvenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumEvenButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        controlsPanel.add(sumEvenButton, gridBagConstraints);

        inputLabel.setText("Input Number:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        controlsPanel.add(inputLabel, gridBagConstraints);

        getContentPane().add(controlsPanel, java.awt.BorderLayout.PAGE_START);

        outputListTextArea.setEditable(false);
        outputListTextArea.setColumns(20);
        outputListTextArea.setRows(5);
        outputScrollPane.setViewportView(outputListTextArea);

        getContentPane().add(outputScrollPane, java.awt.BorderLayout.CENTER);

        outputField.setEditable(false);
        getContentPane().add(outputField, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        int number;
        try{
            number = Integer.parseInt(inputField.getText());//Try to parse number
            numbers.add(number);//Add to list
            showList();//Show on screen
        }catch(NumberFormatException e){//Something's gone wrong
            outputField.setText("Invalid number input: " + inputField.getText());
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        int number;
        try{
            number = Integer.parseInt(inputField.getText());//Try to parse input
            numbers.remove((Integer)number);//Cast to integer to not be mistaken for an index
            showList();//Show list
        }catch(NumberFormatException e){//User doesn't know how to write numbers
            outputField.setText("Invalid number input: " + inputField.getText());
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void listButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listButtonActionPerformed
        showList();//*presses easy button*
    }//GEN-LAST:event_listButtonActionPerformed

    private void sumAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumAllButtonActionPerformed
        int sum = 0;//var to store sum
        sum = numbers.stream().map((number) -> number).reduce(sum, Integer::sum);//Add all to var
        showList();
        outputField.setText("Sum: " + sum);//Set output
    }//GEN-LAST:event_sumAllButtonActionPerformed

    private void sumOddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumOddButtonActionPerformed
        sumSome(false);//sum odds
    }//GEN-LAST:event_sumOddButtonActionPerformed

    private void sumEvenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumEvenButtonActionPerformed
        sumSome(true);//sum evens
    }//GEN-LAST:event_sumEvenButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SumElements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SumElements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SumElements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SumElements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SumElements().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JPanel controlsPanel;
    private javax.swing.JTextField inputField;
    private javax.swing.JLabel inputLabel;
    private javax.swing.JButton listButton;
    private javax.swing.JTextField outputField;
    private javax.swing.JTextArea outputListTextArea;
    private javax.swing.JScrollPane outputScrollPane;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton sumAllButton;
    private javax.swing.JButton sumEvenButton;
    private javax.swing.JButton sumOddButton;
    // End of variables declaration//GEN-END:variables
}
