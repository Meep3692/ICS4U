/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tictactoe;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;

/**
 *
 * @author Darian
 */
public class TicTacToe extends javax.swing.JFrame {

    Team currentTurn;
    Team[][] board;
    JButton[][] buttons;
    
    /**
     * Creates new form TicTacToe
     */
    public TicTacToe() {
        board = new Team[3][3];//Initialise array for teams
        
        initComponents();
        
        //Add game buttons
        buttons = new JButton[3][3];//Initialise array for buttons
        for(int i = 0; i < 3; i++){//For 3 rows
            for(int l = 0; l < 3; l++){//For 3 columns
                board[i][l] = Team.NONE;//Set team for all of board to none, no one has moved yet
                
                buttons[i][l] = new JButton();//Create a button
                buttons[i][l].setName(String.format("board(%d,%d)", i, l));//Name for later identification
                
                buttons[i][l].addActionListener((ActionEvent evt) -> {//Add action listener
                    boardButtonPressed(evt);//Run function to handle this press
                });//This is the way the swing designer does it
                
                gamePanel.add(buttons[i][l]);
            }//I don't do this with the designer so I have more control and to avoid repeating myself
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        gamePanel = new javax.swing.JPanel();
        dataPanel = new javax.swing.JPanel();
        moveLabel = new javax.swing.JLabel();
        newGameButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        gamePanel.setLayout(new java.awt.GridLayout(3, 3));
        getContentPane().add(gamePanel, java.awt.BorderLayout.CENTER);

        dataPanel.setLayout(new java.awt.GridBagLayout());

        moveLabel.setText("Move: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        dataPanel.add(moveLabel, gridBagConstraints);

        newGameButton.setText("New Game");
        newGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        dataPanel.add(newGameButton, gridBagConstraints);

        getContentPane().add(dataPanel, java.awt.BorderLayout.EAST);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameButtonActionPerformed
        for(int i = 0; i < 3; i++){
            for(int l = 0; l < 3; l++){//Iterate through whole board
                board[i][l] = Team.NONE;
            }
        }
        currentTurn = Team.CROSS;
    }//GEN-LAST:event_newGameButtonActionPerformed

    private void boardButtonPressed(ActionEvent evt){
        //button name is board(x,y)
        int x, y;//Position on the board pressed;
        String xString, yString;//String representations of x and y to be parsed into x and y
        
        String buttonName = ((JButton)evt.getSource()).getName();//Get name of button that fired event
        
        //Get coordinates of button from name
        //We know where they are because they are always the same length (1 digit)
        xString = buttonName.substring(6, 7);//x value will always be from 6 to 7
        yString = buttonName.substring(8, 9);//y value will always be from 8 to 9
        
        x = Integer.parseInt(xString);//Parse strings into integers
        y = Integer.parseInt(yString);
        
        if(board[x][y] == Team.NONE){//Make sure this space isn't already taken
            board[x][y] = currentTurn;
            buttons[x][y].setText(currentTurn.toString());
            if(currentTurn == Team.CROSS)//If it's cross' turn, change to nought's
                currentTurn = Team.NOUGHT;
            else//Otherwise, it must be nought's turn, change to cross'
                currentTurn = Team.CROSS;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicTacToe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicTacToe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicTacToe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicTacToe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TicTacToe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel dataPanel;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JLabel moveLabel;
    private javax.swing.JButton newGameButton;
    // End of variables declaration//GEN-END:variables
}
