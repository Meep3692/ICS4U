/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tictactoeswaine;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import java.awt.Component;
import javax.swing.JOptionPane;
/**
 *
 * @author jonswaine
 * @date Oct. 26, 2017
 * 
 */
public class TicTacToeUI extends javax.swing.JFrame {

    // Create ImageIcon object to hold x and o
    ImageIcon xImage = new ImageIcon(getClass().getResource("/tictactoeswaine/x.png")); 
    ImageIcon oImage = new ImageIcon(getClass().getResource("/tictactoeswaine/o.jpg")); 
    // Create a tic tac toe board "in memory"
    int[][] grid = new int[3][3];
    // Count the clicks
    int clickCount = 0;
    // Count the wins
    int xWins = 0;
    int oWins = 0;
    int gameCount = 0;
    // Flag to see status of game
    short xWin = 2;
    boolean xStarts = true;
    
    /**
     * Creates new form TicTacToeUI
     */
    public TicTacToeUI() {
        initComponents();
        // Initialize the tic tac toe board in memory
        initMemoryGrid();
        // Set size of the frame (unchangable by user)
        this.setSize(700,400);
        lblWhoseTurn.setText("X starts.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn4 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        lblGrid = new javax.swing.JLabel();
        btnRestart = new javax.swing.JButton();
        lblXWins = new javax.swing.JLabel();
        lblTitleTurn = new javax.swing.JLabel();
        lblOWins = new javax.swing.JLabel();
        lblXWins3 = new javax.swing.JLabel();
        lblXWins2 = new javax.swing.JLabel();
        lblWhoseTurn = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });
        getContentPane().add(btn4);
        btn4.setBounds(10, 130, 110, 120);

        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });
        getContentPane().add(btn7);
        btn7.setBounds(10, 260, 110, 110);

        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });
        getContentPane().add(btn9);
        btn9.setBounds(260, 260, 110, 110);

        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });
        getContentPane().add(btn5);
        btn5.setBounds(130, 130, 120, 120);

        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });
        getContentPane().add(btn2);
        btn2.setBounds(130, 10, 120, 110);

        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });
        getContentPane().add(btn8);
        btn8.setBounds(130, 260, 120, 110);

        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });
        getContentPane().add(btn6);
        btn6.setBounds(260, 130, 110, 120);

        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });
        getContentPane().add(btn1);
        btn1.setBounds(10, 10, 110, 110);

        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });
        getContentPane().add(btn3);
        btn3.setBounds(260, 10, 110, 110);

        lblGrid.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tictactoeswaine/tictactoeboard.jpg"))); // NOI18N
        getContentPane().add(lblGrid);
        lblGrid.setBounds(0, 0, 380, 380);

        btnRestart.setText("Restart");
        btnRestart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestartActionPerformed(evt);
            }
        });
        getContentPane().add(btnRestart);
        btnRestart.setBounds(430, 30, 88, 29);

        lblXWins.setText("0");
        getContentPane().add(lblXWins);
        lblXWins.setBounds(420, 140, 10, 16);

        lblTitleTurn.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        lblTitleTurn.setText("Turn");
        getContentPane().add(lblTitleTurn);
        lblTitleTurn.setBounds(420, 180, 45, 17);

        lblOWins.setText("0");
        getContentPane().add(lblOWins);
        lblOWins.setBounds(510, 140, 8, 16);

        lblXWins3.setText("X Wins");
        getContentPane().add(lblXWins3);
        lblXWins3.setBounds(420, 100, 45, 16);

        lblXWins2.setText("O Wins");
        getContentPane().add(lblXWins2);
        lblXWins2.setBounds(510, 100, 45, 16);

        lblWhoseTurn.setText(" ");
        getContentPane().add(lblWhoseTurn);
        lblWhoseTurn.setBounds(420, 210, 110, 16);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * For all tic-tac-toe buttons, run the clicked method (using the button
     * as the parameter) and alter the appropriate grid position
     * Always check to see if someone just won
     */
    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        clicked(btn4);
        grid[1][0] = clickCount % 2;
        checkForWin();
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        clicked(btn7);
        grid[2][0] = clickCount % 2;
        checkForWin();
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        clicked(btn9);
        grid[2][2] = clickCount % 2;
        checkForWin();
    }//GEN-LAST:event_btn9ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        clicked(btn5);
        grid[1][1] = clickCount % 2;
        checkForWin();
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        clicked(btn2);
        grid[0][1] = clickCount % 2;
        checkForWin();
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        clicked(btn8);
        grid[2][1] = clickCount % 2;
        checkForWin();
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        clicked(btn6);
        grid[1][2] = clickCount % 2;
        checkForWin();
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        clicked(btn1);
        grid[0][0] = clickCount % 2;
        checkForWin();
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        clicked(btn3);
        grid[0][2] = clickCount % 2;
        checkForWin();
    }//GEN-LAST:event_btn3ActionPerformed

    /**
     * Restart the game
     */
    private void btnRestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestartActionPerformed
        
        // Detect all of the object in the frame (all buttons, labels...) and
        // save the result in an array of components
        Component[] components = this.getContentPane().getComponents();

        // For all of the components ...
        for (Component c : components)
        {
            // ... if that component is a button and if there no text in the button
            // that means it is a "game button"
            if ( (c instanceof JButton) && (((JButton) c).getText().length()==0) )
            {
                // Enable the game buttons
                c.setEnabled(true);
                // Set the pic of the button to nothing
                ((JButton) c).setIcon(null);
            }
        }
        
        gameCount++;
        // Reset these variables to intitial conditions and reset the grid
        if (gameCount % 2 == 1)
        {
            clickCount = 1;
            lblWhoseTurn.setText("O starts.");
            xStarts = false;
        }
        else
        {
            clickCount = 0;
            lblWhoseTurn.setText("X starts.");
            xStarts = true;
        }
        xWin = 2;
        initMemoryGrid();
        
    }//GEN-LAST:event_btnRestartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicTacToeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicTacToeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicTacToeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicTacToeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TicTacToeUI().setVisible(true);
            }
        });
    }

    /**
     * @param b - the button that was clicked
     * 
     * The clicked method takes the button that was clicked and puts the appropriate
     * image in it
     */
    public void clicked(JButton b)
    {
        // Add to the global click counter
        clickCount++;
        // First click goes to "x"
        if (clickCount % 2 == 1)
        {
            // Change image of whichever button was clicked to X
            b.setIcon(xImage);
            lblWhoseTurn.setText("O");
        }
        // Every other click goes to "o"
        else
        {
            // Change image of whichever button was clicked to O
            b.setIcon(oImage);
            lblWhoseTurn.setText("X");
        }
        b.setEnabled(false);
    }
    
    /**
     * Check to see if someone just won the game
     */
    public void checkForWin()       
    {
        // No point in checking until 5 clicks have been detected!
        if (clickCount > 4)
        {
            // Check rows
            for (int x = 0; x < 3; x++)
            {
                // If all entries in a row are the same, but not -1, we have a winner
                if ( (grid[x][0] == grid[x][1]) && (grid[x][1] == grid[x][2]) && (grid[x][0] != -1) )
                {
                    // Check to see who won
                    String winner = checkWhoWon();
                }

            }
            // If still no winner
            if (xWin == 2)
            {
                // Check columns
                for (int x = 0; x < 3; x++)
                {
                    if ( (grid[0][x] == grid[1][x]) && (grid[1][x] == grid[2][x]) && (grid[0][x] != -1) )
                    {
                        String winner = checkWhoWon();
                    }

                }
            }
            // If still no winner
            if (xWin == 2)
            {
                // Check both diagonals
                if ( (grid[0][0] == grid[1][1]) && (grid[1][1] == grid[2][2])  && (grid[0][0] != -1))
                {
                    String winner = checkWhoWon();
                }   
                else if ( (grid[0][2] == grid[1][1]) && (grid[1][1] == grid[2][0])  && (grid[2][0] != -1))
                {
                    String winner = checkWhoWon();
                }
            }
            
            // Check for a tie
            if (xWin == 2)
            {
                // if X begins, we need only 9 clicks before the game is over due to a tie
                if (xStarts)
                {
                    if (clickCount == 9)
                    {
                        JOptionPane.showMessageDialog(this, "It's a tie!!!  Better press restart!");

                    }
                }
                // if O begins, we need only 9 clicks still, but we started 
                // the click counter at 1 so we need 10 total
                else 
                {
                    if (clickCount == 10)
                    {
                        JOptionPane.showMessageDialog(this, "It's a tie!!!  Better press restart!");
                    }
                }
            }
        }
        
    }
    
    /**
     * @return String - the name of the winner
     * 
     * The game is over, but who won?
     */
    public String checkWhoWon()
    {
        // We disable all buttons and add to the score for
        // the winner
        btn1.setEnabled(false);
        btn2.setEnabled(false);
        btn3.setEnabled(false);
        btn4.setEnabled(false);
        btn5.setEnabled(false);
        btn6.setEnabled(false);
        btn7.setEnabled(false);
        btn8.setEnabled(false);
        btn9.setEnabled(false);
       
        
        if (clickCount % 2 == 1)
        {
            xWin = 1;  // indicates x wins
            //System.out.println("x wins");
            xWins++;
            lblXWins.setText(Integer.toString(xWins));
            JOptionPane.showMessageDialog(this, "X wins! Press restart and pick up your game, O!");
            return "X wins";
            
        }
        else
        {
            xWin = 0; // indicates x loses
            //System.out.println("o wins");
            oWins++;
            lblOWins.setText(Integer.toString(oWins));
            JOptionPane.showMessageDialog(this, "O wins! Press restart and fight back, X!");
            return "O wins";
        }
    }
    
    /**
     * Fill the 3x3 grid with -1, meaning no click yet
     */
    public void initMemoryGrid()
    {
        for (int x = 0; x < 3; x++)
        {
            for (int y = 0; y < 3; y++)
            {
                grid[x][y] = -1;
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnRestart;
    private javax.swing.JLabel lblGrid;
    private javax.swing.JLabel lblOWins;
    private javax.swing.JLabel lblTitleTurn;
    private javax.swing.JLabel lblWhoseTurn;
    private javax.swing.JLabel lblXWins;
    private javax.swing.JLabel lblXWins2;
    private javax.swing.JLabel lblXWins3;
    // End of variables declaration//GEN-END:variables
}
