/*
A quick note, if your wondering why I pass strings to the operators instead of elegently parsing this properly, it's because that doesn't allow for recursion as it pre-parses everything and would get stuck in a loop of infinite possibility
*/
package u1a6_mathmethods;

/**
 *
 * @author awoo
 */
public class MathMethods extends javax.swing.JFrame {

    RPC rpc;
    
    /**
     * Creates new form MathMethods
     */
    public MathMethods() {
        rpc = new RPC();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputField = new javax.swing.JTextField();
        confirmButton = new javax.swing.JButton();
        centrePanel = new javax.swing.JPanel();
        outputLabel = new javax.swing.JLabel();
        instructionsLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Reverse Polish Calculator");
        setPreferredSize(new java.awt.Dimension(300, 300));

        inputField.setText("1 1 +");
        getContentPane().add(inputField, java.awt.BorderLayout.PAGE_START);

        confirmButton.setText("Calculate");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });
        getContentPane().add(confirmButton, java.awt.BorderLayout.PAGE_END);

        centrePanel.setLayout(new java.awt.BorderLayout());

        outputLabel.setText("0");
        centrePanel.add(outputLabel, java.awt.BorderLayout.PAGE_START);

        instructionsLabel.setText("<html> <p> Reverse Polish is a mathmatical notation most famously used in old HP calculators. It can be parsed using a stack. It is used by placing the operands before the operator <span>(3 5 +)</span>. This implementation suports +, -, *, /, ^(power), sin, cos, tan, asin, acos, atan, and a constant pi. Use all lower case. </p> </html>");
        centrePanel.add(instructionsLabel, java.awt.BorderLayout.CENTER);

        getContentPane().add(centrePanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        String input, output;
        double result;
        input = inputField.getText();
        try{
            result = rpc.parseString(input);
            output = Double.toString(result);
        }catch(InvalidOperationException e){
            output = e.getLocalizedMessage();
        }
        outputLabel.setText(output);
    }//GEN-LAST:event_confirmButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MathMethods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MathMethods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MathMethods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MathMethods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MathMethods().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel centrePanel;
    private javax.swing.JButton confirmButton;
    private javax.swing.JTextField inputField;
    private javax.swing.JLabel instructionsLabel;
    private javax.swing.JLabel outputLabel;
    // End of variables declaration//GEN-END:variables
}
